services:
  access:
    container_name: access-service
    build: 
      context: .
      target: development
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
      dockerfile: ./.docker/access/Dockerfile
    volumes:
      - ./access:/var/www/html
    networks:
      - main_network
    depends_on:
      - access-mongo

  access-mongo:
    container_name: access-mongo-db
    image: mongodb/mongodb-community-server:8.0-ubi9
    networks:
        - main_network
    volumes:
        - 'mongodb:/data/db'
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: pass
    ports:
        - "27017:27017"

  nginx:
    container_name: nginx-telemetry
    image: nginx:latest
    ports:
        - "8020:80"
    volumes:
        - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
        - main_network
    depends_on:
        - access

  normalization:
    container_name: normalization-service
    build:
        context: .
        dockerfile: ./.docker/normalization/Dockerfile
    volumes:
        - ./normalization:/var/www/html
    ports:
        - "9090:9090/udp"
    networks:
        - main_network

  kafka:
    image: apache/kafka:4.1.0
    container_name: kafka-telemetry
    build:
      context: .
    environment:
      - KAFKA_NUM_PARTITIONS=3
    networks:
      - main_network  
    
networks:
  main_network:
    driver: bridge

volumes:
  mongodb:
    driver: local